#!/usr/bin/bash
#
# Copyright 2018 Bloomberg Finance L.P.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Quit if we encounter any error.
set -e

die() {
    echo "ERROR: $1"
    exit 1
}

create_branch_list() {

    mkdir -p "${TARGET}/.game_info/"

    COUNTER=0
    while read -r LEVEL_BASE_NAME; do

        CTR=$(printf '%02d' ${COUNTER})

        LEVEL_NAME="${CTR}_${LEVEL_BASE_NAME}"
        echo "${LEVEL_NAME}" >> "${TARGET}/.game_info/branches.txt"

        COUNTER=$((COUNTER + 1))

    done <"${SOURCE}/.game_data/levels.txt"

    cat "${TARGET}/.game_info/branches.txt"

}

setup_repo() {
    mkdir -p "$TARGET"
    git init "$TARGET"

    (
        cd "$TARGET" || die "Could not change to $TARGET"

        git checkout -b base_level

        cp "${SOURCE}/LICENSE" "${TARGET}/"
        cp "${SOURCE}/.game_data/CONTRIBUTING.md" "${TARGET}/"
        cp "${SOURCE}/.game_data/README.md" "${TARGET}/"

        cp "${SOURCE}/hint" "${TARGET}/"
        git add --chmod=+x "${TARGET}/hint"
        cp "${SOURCE}/hint.bat" "${TARGET}/"
        mkdir -p "${TARGET}"/.game_data
        cp "${SOURCE}/.game_data/HEAD_hint.txt" "${TARGET}/.game_data/"
        cp "${SOURCE}/look" "${TARGET}/"
        git add --chmod=+x "${TARGET}/look"
        cp "${SOURCE}/look.bat" "${TARGET}/"
        cp "${SOURCE}/reset" "${TARGET}/"
        git add --chmod=+x "${TARGET}/reset"
        cp "${SOURCE}/reset.bat" "${TARGET}/"
        cp "${SOURCE}/skip_level" "${TARGET}/"
        git add --chmod=+x "${TARGET}/skip_level"
        cp "${SOURCE}/skip_level.bat" "${TARGET}/"
        mkdir -p "${TARGET}/.game_data"
        cp "${SOURCE}/.game_data/skip_level.txt" "${TARGET}/.game_data/"
        git add "${TARGET}"/.game_data/skip_level.txt

        cp "${SOURCE}/.game_data/outtro.sh" "${TARGET}/.game_data/"
        git add --chmod=+x "${TARGET}/.game_data/outtro.sh"

        cp "${SOURCE}/.game_data/help.txt" "${TARGET}/"
        git add "${TARGET}/help.txt"

        mkdir -p "${TARGET}/.game_scripts"
        cp "${SOURCE}/.game_scripts/answer_validator" "${TARGET}/.game_scripts"
        git add --chmod=+x "${TARGET}/.game_scripts/answer_validator"
        cp "${SOURCE}/.game_scripts/unlock_next_level.sh" "${TARGET}/.game_scripts"
        git add --chmod=+x "${TARGET}/.game_scripts/unlock_next_level.sh"
        echo ".game_data/state" > "${TARGET}/.gitignore"

        cat "${TARGET}"/.gitignore

        create_branch_list

        git add --all

        git commit -m"Base Level!"

    )
}

setup_start() {
    (
        cd "$TARGET" || die "Could not change to $TARGET"
        git checkout --orphan master
        git rm --cached -f -r '*'

        cp "${SOURCE}/LICENSE" "${TARGET}/"
        cp "${SOURCE}/.game_data/CONTRIBUTING.md" "${TARGET}/"
        cp "${SOURCE}/.game_data/README.md" "${TARGET}/"
        git add "${TARGET}/CONTRIBUTING.md" "${TARGET}/LICENSE" "${TARGET}/README.md"

        cp "${SOURCE}/start_game" "${TARGET}/"
        cp "${SOURCE}/start_game.bat" "${TARGET}/"
        cp "${SOURCE}/.game_data/start_game.txt" "${TARGET}/.game_data/"
        git add --chmod=+x "${TARGET}/start_game"
        git add "${TARGET}/start_game.bat" "${TARGET}/.game_data/start_game.txt"

        mkdir -p "${TARGET}/.game_data/hooks"
        cp "${SOURCE}/.game_data/hooks/prepare-commit-msg" "${TARGET}/.game_data/hooks/"
        cp "${SOURCE}/.game_data/hooks/post-commit" "${TARGET}/.game_data/hooks/"
        cp "${SOURCE}/.game_data/hooks/post-checkout" "${TARGET}/.game_data/hooks/"
        cp "${SOURCE}/.game_data/hooks/post-rewrite" "${TARGET}/.game_data/hooks/"
        cp "${SOURCE}/.game_data/hooks/pre-rebase" "${TARGET}/.game_data/hooks/"
        git add --chmod=+x "${TARGET}/.game_data/hooks/prepare-commit-msg"
        git add --chmod=+x "${TARGET}/.game_data/hooks/post-commit"
        git add --chmod=+x "${TARGET}/.game_data/hooks/post-checkout"
        git add --chmod=+x "${TARGET}/.game_data/hooks/post-rewrite"
        git add --chmod=+x "${TARGET}/.game_data/hooks/pre-rebase"

        git commit -m"Master Branch!"

        # Remove the files that were cached originally
        git clean -fxd
    )
}

setup_levels() {

    LEVEL_NUMBER=0
    while read -r LEVEL_NAME; do
        LEVEL_NUMBER=$(printf "%02d\\n" ${LEVEL_NUMBER})

        setup_level "${LEVEL_NAME}" "${LEVEL_NUMBER}"

        LEVEL_NUMBER=$((10#$LEVEL_NUMBER + 1))
    done <"${TARGET}/.game_info/branches.txt"

}

setup_level() {
    (
        cd "$TARGET" || die "Could not change to $TARGET"
        git checkout -b "$1" base_level

        mkdir -p "${TARGET}/.game_data"

        LEVEL_BASE_NAME=${1:3}
        LEVEL_TARGET_NAME=$1

        # Check is now optional since a level may have a check script instead
        # of a simple checksum.
        if [[ -f "${SOURCE}/.game_data/${LEVEL_BASE_NAME}_check.txt" ]]; then
            cp "${SOURCE}/.game_data/${LEVEL_BASE_NAME}_check.txt" \
                "${TARGET}/.game_data/${LEVEL_TARGET_NAME}_check.txt"
        fi

        cp "${SOURCE}/.game_data/${LEVEL_BASE_NAME}_room.txt" \
            "${TARGET}/.game_data/${LEVEL_TARGET_NAME}_room.txt"

        for hint in ${SOURCE}/.game_data/${LEVEL_BASE_NAME}_hint*.txt ;
        do
            cp "$hint" "${TARGET}/.game_data/${LEVEL_NUMBER}_$(basename ${hint})"
        done

        if [[ -f "${SOURCE}/.game_data/${LEVEL_BASE_NAME}_post_checkout_setup.sh" ]]; then
            cp "${SOURCE}/.game_data/${LEVEL_BASE_NAME}_post_checkout_setup.sh" \
               "${TARGET}/.game_data/${LEVEL_TARGET_NAME}_post_checkout_setup.sh"
            git add --chmod=+x \
               "${TARGET}/.game_data/${LEVEL_TARGET_NAME}_post_checkout_setup.sh"
        fi

        if [[ -f "${SOURCE}/.game_data/${LEVEL_BASE_NAME}_validation.sh" ]]; then
            cp "${SOURCE}/.game_data/${LEVEL_BASE_NAME}_validation.sh" \
               "${TARGET}/.game_data/${LEVEL_TARGET_NAME}_validation.sh"
            git add --chmod=+x \
               "${TARGET}/.game_data/${LEVEL_TARGET_NAME}_validation.sh"
        fi

        if [[ -f "${SOURCE}/.game_data/${LEVEL_BASE_NAME}_pre_commit_setup.sh" ]]; then
            "${SOURCE}/.game_data/${LEVEL_BASE_NAME}_pre_commit_setup.sh" "${TARGET}" "${SOURCE}"
        fi

	git add --all && git commit -m"$1"

        if [[ -f "${SOURCE}/.game_data/${LEVEL_BASE_NAME}_post_commit_setup.sh" ]]; then
            "${SOURCE}/.game_data/${LEVEL_BASE_NAME}_post_commit_setup.sh" "${TARGET}" "${LEVEL_NUMBER}" "${SOURCE}"
        fi
    )
}

while [[ $# -gt 0 ]]
do
    key="$1"

    case $key in
        -o|--out)
        TARGET=$(realpath "$2")
        shift # pass argument
        shift # pass value
        ;;
        *)
        die "Invalid argument: $key"
        ;;
    esac
done

if [ -z "$TARGET" ]; then
    die "Target folder not specified!"
fi
SOURCE="$( cd "$(dirname "$0")" ; pwd -P )"

echo "Setting up new game git repository at $TARGET"

setup_repo

echo -e '[merge]\nconflictstyle = merge\n' >> "${TARGET}/.git/config"

setup_levels

setup_start
